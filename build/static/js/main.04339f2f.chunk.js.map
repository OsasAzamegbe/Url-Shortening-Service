{"version":3,"sources":["components/Button.js","components/Navbar.js","utils/Validate.js","components/pages/signup/SignUp.js","components/Form.js","components/ListItem.js","components/List.js","components/pages/profile/Profile.js","components/pages/login/Login.js","components/pages/logout/Logout.js","components/HomeSection.js","components/pages/home/Data.js","components/pages/home/Home.js","components/pages/home/HomeRedirect.js","App.js","serviceWorker.js","index.js"],"names":["STYLES","SIZES","COLORS","Button","children","type","onClick","buttonStyle","buttonSize","buttonColor","checkStyle","includes","checkSize","checkColor","className","Navbar","user","useState","click","setClick","button","setButton","closeMobileMenu","window","addEventListener","innerWidth","to","Object","keys","length","validate","values","errors","username","trim","password","email","test","SignUp","alerts","setAlerts","setUsername","setEmail","setPassword","setErrors","history","useHistory","postSignUp","a","postData","fetch","method","body","JSON","stringify","headers","response","json","data","status","push","pathname","state","emailInput","passwordInput","signup","text","message","success","setTimeout","useEffect","onSubmit","e","preventDefault","validated","onChange","target","value","name","placeholder","Form","setLongUrl","inputText","setInputText","required","ListItem","dateInput","item","urlTextRef","useRef","url","slice","ref","shortUrl","dateCreated","Date","toLocaleString","weekday","year","month","day","hour","minute","current","innerHTML","navigator","clipboard","writeText","alert","List","items","heading","map","index","key","Profile","urls","setUrls","longUrl","postUrl","loggedInUser","localStorage","getItem","foundUser","parse","token","Authorization","getUrls","then","Login","setUser","location","useLocation","submitHandler","postLogin","setItem","login","Logout","clear","HomeSection","lightBg","topLine","lightText","lightTextDesc","headLine","description","buttonLabel","img","alt","imgStart","hideButton","style","display","flexDirection","src","sectionOneObj","Home","HomeRedirect","App","path","exact","component","render","props","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.04339f2f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst STYLES = [\"btn--primary\", \"btn--outline\"]\r\n\r\nconst SIZES = [\"btn--medium\", \"btn--large\", \"btn--mobile\", \"btn--wide\"]\r\n\r\nconst COLORS = [\"primary\", \"blue\", \"red\", \"green\"]\r\n\r\nconst Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize,\r\n    buttonColor\r\n}) => {\r\n    const checkStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n\r\n    const checkSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    const checkColor = COLORS.includes(buttonColor) ? buttonColor : \"\"\r\n\r\n    return (\r\n    <button type={type} onClick={onClick} className={`btn ${checkStyle} ${checkSize} ${checkColor}`} >{children}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {FaBars, FaTimes} from 'react-icons/fa'\r\nimport {MdLeakRemove} from 'react-icons/md'\r\nimport Button from './Button'\r\nimport './Navbar.css'\r\n\r\n\r\nconst Navbar = ({user}) => {\r\n\r\n    const [click, setClick] = useState(false)\r\n    const [button, setButton] = useState(true)\r\n\r\n    const clickHandler = () => setClick(!click)\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960){\r\n            setButton(false)\r\n        } else {\r\n            setButton(true)\r\n        }\r\n    }\r\n\r\n    window.addEventListener('resize', showButton)\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-container container\">\r\n                <Link to=\"/app\" className=\"navbar-logo\" onClick={closeMobileMenu}  >\r\n                    <MdLeakRemove className=\"navbar-icon\"/>\r\n                    Shorten\r\n                </Link>\r\n                <div className=\"menu-icon\" onClick={clickHandler} >              \r\n                    {click ? <FaTimes className=\"fa-times\" /> : <FaBars className=\"fa-bars\"/>}\r\n                </div>\r\n    \r\n                { Object.keys(user).length !== 0 ?\r\n                    <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/app/profile\" className=\"nav-links\" onClick={closeMobileMenu} >\r\n                                Profile\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-btn\">\r\n                            <Link to=\"/app/logout\" className=\"btn-link\" onClick={closeMobileMenu} >\r\n                                {button ? \r\n                                <Button buttonStyle=\"btn--outline\">LOG OUT</Button>\r\n                                :\r\n                                <Button buttonStyle=\"btn--outline\" buttonSize=\"btn--mobile\">LOG OUT</Button>}\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    :\r\n                    <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/app/login\" className=\"nav-links\" onClick={closeMobileMenu} >\r\n                                Login\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-btn\">\r\n                            <Link to=\"/app/sign-up\" className=\"btn-link\" onClick={closeMobileMenu} >\r\n                                {button ? \r\n                                <Button buttonStyle=\"btn--outline\">SIGN UP</Button>\r\n                                :\r\n                                <Button buttonStyle=\"btn--outline\" buttonSize=\"btn--mobile\">SIGN UP</Button>}\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","const validate = values => {\r\n\r\n    const keys = Object.keys(values);\r\n    const errors = {};\r\n\r\n    if (keys.includes(\"username\")) {\r\n        if (values.username.trim() === \"\") {\r\n            errors.username = '* Required';\r\n        } else if (values.username.length > 20) {\r\n            errors.username = 'Must be 20 characters or less';\r\n        }\r\n    }\r\n    \r\n    if (keys.includes(\"password\")) {\r\n        if (values.password.trim() === \"\") {\r\n            errors.password = '* Required';\r\n        } else if (values.password.length < 8) {\r\n            errors.password = 'Must be longer than 8 characters';\r\n        } else if (values.password.length > 100) {\r\n            errors.password = 'Must be less than 100 characters';\r\n        }\r\n    }\r\n    \r\n    if (keys.includes(\"email\")) {\r\n        if (values.email.trim() === \"\") {\r\n            errors.email = '* Required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n        } else if (values.email.length > 100) {\r\n            errors.email = 'Must be 100 characters or less';\r\n        }\r\n    }\r\n    \r\n\r\n    return errors;\r\n};\r\n\r\n\r\nexport {validate}","import React, {useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Button from '../../Button';\r\nimport './SignUp.css';\r\nimport {validate} from '../../../utils/Validate'\r\n\r\n\r\n\r\nconst SignUp = ({alerts, setAlerts}) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [errors, setErrors] = useState({})\r\n    let history = useHistory()\r\n\r\n\r\n    const loginRedirect = () => {        \r\n        history.push({\r\n            pathname: \"/app/login\", \r\n            state: {\r\n                emailInput: email,\r\n                passwordInput: password\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorsAbsent = () => {\r\n        return Object.keys(errors).length === 0\r\n    }\r\n\r\n\r\n    const validateSignUp = () => {\r\n        const values = {\r\n            username,\r\n            email,\r\n            password\r\n        }\r\n\r\n        return validate(values)\r\n    }\r\n    \r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        \r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n        \r\n    }\r\n\r\n    const postSignUp = async () => {\r\n        if (errorsAbsent() && username && email && password){\r\n            const url = `/api/v1/register`\r\n            const postData = {\r\n                username,\r\n                email,\r\n                password\r\n            }\r\n            \r\n            setUsername(\"\")\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(postData),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            const data = await response.json()\r\n\r\n            if(response.status === 201){\r\n                loginRedirect()\r\n                setAlerts({\r\n                    ...alerts,\r\n                    signup: {\r\n                        text: data.message,\r\n                        success: true\r\n                    }\r\n                })\r\n            } else{\r\n                setAlerts({\r\n                    ...alerts,\r\n                    signup: {\r\n                        text: data.message,\r\n                        success: false\r\n                    }\r\n                })\r\n            }\r\n\r\n            setTimeout(() => {\r\n                setAlerts({\r\n                    ...alerts,\r\n                    signup: {}\r\n                })\r\n            }, 4000)\r\n        \r\n        }   \r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n    \r\n        const validated = validateSignUp()\r\n        setErrors(validated)\r\n    }\r\n\r\n    useEffect( () => {\r\n        postSignUp()\r\n    }, [errors])\r\n\r\n    return (\r\n        <div>\r\n            <section className='sign-up-subscription'>\r\n                <p className='sign-up-subscription-heading'>\r\n                Sign Up\r\n                </p>\r\n\r\n                {\r\n                    alerts.signup ?\r\n                    <div className={`alert ${alerts.signup.success ? \"alert-success\" : null}`}>\r\n                        <p className=\"alert-text\" >{alerts.signup.text}</p>\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n                <div >\r\n                <form onSubmit={submitHandler} className='sign-up-container'>\r\n                    <input\r\n                    onChange={usernameHandler}\r\n                    value={username}\r\n                    className='sign-up-input'\r\n                    name='username'\r\n                    type='text'\r\n                    placeholder='Your Username'\r\n                    />\r\n                    {errors.username ? <div className=\"errors\">{errors.username}</div> : null}\r\n                    <input\r\n                    onChange={emailHandler}\r\n                    value={email}\r\n                    className='sign-up-input'\r\n                    name='email'\r\n                    placeholder='Your Email'\r\n                    />\r\n                    {errors.email ? <div className=\"errors\">{errors.email}</div> : null}\r\n                    <input\r\n                    onChange={passwordHandler}\r\n                    value={password}\r\n                    className='sign-up-input'\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='New Password'\r\n                    />\r\n                    {errors.password ? <div className=\"errors\">{errors.password}</div> : null}\r\n                    <Button buttonStyle='btn--outline' children={\"Sign Up\"}/>\r\n                </form>\r\n                </div>\r\n            </section>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, {useState} from 'react';\r\nimport Button from './Button'\r\nimport './Form.css'\r\n\r\n\r\nconst Form = ({setLongUrl}) => {\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault()\r\n        setLongUrl(inputText)\r\n        setInputText(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <form onSubmit={submitTodoHandler} >\r\n                <input onChange={inputTextHandler} value={inputText} type=\"url\" placeholder=\"paste URL\" required />\r\n                <Button type=\"submit\" children=\"Shorten\" buttonColor=\"red\" buttonSize=\"btn--large\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React, {useRef} from 'react';\r\nimport './ListItem.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {FaCopy} from 'react-icons/fa'\r\n\r\n\r\nconst ListItem = ({item}) => {\r\n    const urlTextRef = useRef(null)\r\n\r\n    const copyToClipboard = e => {\r\n        const text = urlTextRef.current.innerHTML\r\n        navigator.clipboard.writeText(text)\r\n        window.alert(`Copied \"${text}\" to clipboard!`)\r\n    };\r\n\r\n    const date = (dateInput) => {\r\n        const options = {\r\n            weekday: 'short', \r\n            year: 'numeric', \r\n            month: 'short', \r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric' \r\n        }\r\n        const created = new Date(dateInput)\r\n        return created.toLocaleString(\"en-US\", options)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"rows\">\r\n                <Link \r\n                to={item.url.slice(6)}\r\n                target=\"_blank\">\r\n                    <div className=\"item\">\r\n                        <li>\r\n                            <p\r\n                            ref={urlTextRef} \r\n                            className=\"item-text\" >\r\n                                {item.shortUrl}\r\n                            </p>\r\n                            <p className=\"item-subtext\">\r\n                                {`created: ${date(item.dateCreated)}`}\r\n                            </p>\r\n                        </li>\r\n                    </div> \r\n                </Link>\r\n                <div onClick={copyToClipboard}  className=\"copy-icon\">\r\n                <FaCopy/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport  ListItem from './ListItem';\r\nimport './List.css'\r\n\r\n\r\nconst List = ({items, heading}) => {\r\n    return (\r\n        <div className=\"list-container\">\r\n            {heading ?\r\n            <div className=\"list-heading-wrapper\">\r\n                <p className=\"list-heading\">{heading}</p>\r\n            </div>\r\n            : \"\"}\r\n            \r\n            <ul className=\"list-list\">\r\n                {\r\n                    items.map((item, index) => (\r\n                    <ListItem key={index} item={item}/>\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;","import React, {useState, useEffect} from 'react'\r\nimport './Profile.css'\r\nimport Form from '../../Form'\r\nimport List from '../../List'\r\n\r\n\r\nconst Profile = ({user, alerts, setAlerts}) => {\r\n\r\n    const [urls, setUrls] = useState([])\r\n    const [longUrl, setLongUrl] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const postUrl = async () => {\r\n            const loggedInUser = localStorage.getItem(\"user\");\r\n            if (loggedInUser) {\r\n                const foundUser = JSON.parse(loggedInUser);\r\n                const token = foundUser.token\r\n                const url = `/api/v1/shorten`\r\n                const body = {\r\n                    \"url\": longUrl\r\n                }\r\n                const response = await fetch(url,{\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: token\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                })\r\n\r\n                const data = await response.json()\r\n                setLongUrl(\"\")\r\n\r\n                if(response.status === 201){\r\n                    setAlerts({\r\n                        ...alerts,\r\n                        signup: {\r\n                            text: data.message,\r\n                            success: true\r\n                        }\r\n                    })\r\n                } else{\r\n                    setAlerts({\r\n                        ...alerts,\r\n                        signup: {\r\n                            text: data.message,\r\n                            success: false\r\n                        }\r\n                    })\r\n                }\r\n    \r\n                setTimeout(() => {\r\n                    setAlerts({\r\n                        ...alerts,\r\n                        signup: {}\r\n                    })\r\n                }, 4000)\r\n\r\n            }   \r\n        }\r\n\r\n        \r\n        const getUrls = async () => {\r\n            const loggedInUser = localStorage.getItem(\"user\");\r\n            if (loggedInUser) {\r\n\r\n                const foundUser = JSON.parse(loggedInUser);\r\n                const token = foundUser.token\r\n                const url = `/api/v1/shorten`\r\n                const response = await fetch(url,{\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: token\r\n                    }\r\n                })\r\n\r\n                const data = await response.json()\r\n                if (data.urls) setUrls(data.urls)\r\n            }   \r\n        }\r\n\r\n        if (longUrl){\r\n            postUrl().then(getUrls())\r\n        } else {\r\n            getUrls()\r\n        }\r\n        \r\n\r\n    },[longUrl])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile-container\">\r\n                <h1 className=\"profile-heading\">Welcome, {user.username}</h1>\r\n                \r\n                {\r\n                    alerts.signup ?\r\n                    <div className={`alert ${alerts.signup.success ? \"alert-success\" : null}`}>\r\n                        <p className=\"alert-text\" >{alerts.signup.text}</p>\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n                <Form \r\n                setLongUrl={setLongUrl} />\r\n\r\n                <List \r\n                heading={\"Shortened URLs\"}\r\n                items={urls}/>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {useState, useEffect} from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport Button from '../../Button';\r\nimport './Login.css';\r\nimport {validate} from '../../../utils/Validate'\r\n\r\n\r\nconst Login = ({setUser, alerts, setAlerts}) => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [errors, setErrors] = useState({})\r\n    let history = useHistory()\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        if (location.state && location.state.emailInput && location.state.passwordInput){\r\n            setEmail(location.state.emailInput)\r\n            setPassword(location.state.passwordInput)\r\n        }\r\n    }, [location])\r\n\r\n    const errorsAbsent = () => {\r\n        return Object.keys(errors).length === 0\r\n    }\r\n\r\n\r\n    const validateLogin = () => {\r\n        const values = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        return validate(values)\r\n    }\r\n\r\n    const profileRedirect = () => {        \r\n        history.push(\"/app/profile\")\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n        \r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const validated = validateLogin()\r\n        setErrors(validated)\r\n    }\r\n\r\n    const postLogin = async () => {\r\n        if (errorsAbsent() && email && password) {\r\n            const url = `/api/v1/login`\r\n            const postData = {\r\n                email,\r\n                password\r\n            }\r\n\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(postData),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            })\r\n\r\n            const data = await response.json()\r\n            const user = data.user       \r\n\r\n            if(response.status === 200){\r\n                localStorage.setItem('user', JSON.stringify(user))\r\n                setUser(user)\r\n                profileRedirect()\r\n                setAlerts({\r\n                    ...alerts,\r\n                    login: {\r\n                        text: data.message,\r\n                        success: true\r\n                    }\r\n                })\r\n            } else{\r\n                setAlerts({\r\n                    ...alerts,\r\n                    login: {\r\n                        text: data.message,\r\n                        success: false\r\n                    }\r\n                })\r\n            }\r\n\r\n            setTimeout(() => {\r\n                setAlerts({\r\n                    ...alerts,\r\n                    login: {}\r\n                })\r\n            }, 4000)\r\n        }\r\n    }\r\n    \r\n    useEffect( () => {\r\n        postLogin()\r\n    }, [errors])\r\n\r\n    return (\r\n        <div>\r\n            <section className='login-subscription'>\r\n                <p className='login-subscription-heading'>\r\n                Login\r\n                </p>\r\n                \r\n                {\r\n                    alerts.login ?\r\n                    <div className={`alert ${alerts.login.success ? \"alert-success\" : null}`}>\r\n                        <p className=\"alert-text\" >{alerts.login.text}</p>\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n                <div >\r\n                <form onSubmit={submitHandler} className='login-container'>\r\n                    <input\r\n                    onChange={emailHandler}\r\n                    value={email}\r\n                    className='login-input'\r\n                    name='email'\r\n                    placeholder='Your Email'\r\n                    />\r\n                    {errors.email ? <div className=\"errors\">{errors.email}</div> : null}\r\n                    <input\r\n                    onChange={passwordHandler}\r\n                    value={password}\r\n                    className='login-input'\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='Your Password'\r\n                    />\r\n                    {errors.password ? <div className=\"errors\">{errors.password}</div> : null}\r\n                    <Button buttonStyle='btn--outline' children={\"Login\"}/>\r\n                </form>\r\n                </div>\r\n            </section>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useEffect} from 'react'\r\nimport './Logout.css'\r\n\r\n\r\nconst Logout = ({setUser}) => {\r\n\r\n    useEffect(() => {\r\n        setUser({})\r\n        localStorage.clear()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"logout-container\">\r\n            <p className=\"logout-headline\">You Have Been Logged Out!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from './Button'\r\nimport './HomeSection.css'\r\n\r\n\r\nconst HomeSection = ({\r\n    lightBg, topLine, lightText, lightTextDesc, headLine, description, buttonLabel, img, alt, imgStart, hideButton\r\n}) => {\r\n\r\n    return(\r\n        <div className={lightBg ? 'home__home-section' : 'home__home-section darkBg'}>\r\n            <div className=\"container\">\r\n                <div \r\n                className=\"row home__home-row\"\r\n                style={{display: 'flex', flexDirection: imgStart ? 'row-reverse' : 'row'}}>\r\n                    <div className=\"col\">\r\n                        <div className=\"home__home-text-wraper\">\r\n                            <div className=\"top-line\">{topLine}</div>\r\n                            <h1 className={lightText ? 'heading' : 'heading dark'}>{headLine}</h1>\r\n                            <p className={lightTextDesc ? 'home__home-subtitle' : 'home__home-subtitle dark'}>{description}</p>\r\n                            {!hideButton ? \r\n                            <Link to=\"/app/sign-up\">\r\n                                <Button buttonSize='btn--wide' buttonColor='red' >{buttonLabel}</Button>\r\n                            </Link> : \"\"\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"home__home-img-wrapper\">\r\n                            <img className=\"home__home-img\" src={img} alt={alt}/> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeSection;","const sectionOneObj = {\r\n\r\n    lightBg: true,\r\n    lightText: false,\r\n    lightTextDesc: false,\r\n    topLine: \"Shorten Links Expeditiously\",\r\n    headLine: \"Start Today!\",\r\n    description: \"Welcome to Shorten. This is a URL shortening service for creating short links, that are highly available, on the fly!\",\r\n    buttonLabel: \"Create A Free Account\",\r\n    imgStart: false,\r\n    img: \"images/homepage.png\",\r\n    alt: \"Home page illustration\"\r\n}\r\n\r\nexport {sectionOneObj}","import React from 'react'\r\nimport './Home.css'\r\nimport HomeSection from '../../HomeSection'\r\nimport {sectionOneObj} from './Data'\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home-container\">\r\n                <HomeSection\r\n                {...sectionOneObj}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, {useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nconst HomeRedirect = () => {\r\n\r\n    let history = useHistory()\r\n    \r\n    useEffect(() =>{\r\n        history.push(\"/app\")\r\n    }, [history])\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeRedirect","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport SignUp from './components/pages/signup/SignUp'\nimport Profile from './components/pages/profile/Profile'\nimport Login from './components/pages/login/Login'\nimport Logout from './components/pages/logout/Logout'\nimport Home from './components/pages/home/Home'\nimport HomeRedirect from './components/pages/home/HomeRedirect'\n\n\nfunction App() {\n  const [user, setUser] = useState({})\n  const [alerts, setAlerts] = useState({})\n\n  useEffect(() => {\n\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    }\n\n  }, [])\n\n  return (\n    <div>\n      <Router>\n      <Navbar user={user} />\n      <Switch>\n        <Route path='/' exact component={HomeRedirect} />\n        <Route path='/app' exact component={Home}/>\n        <Route path='/app/profile' exact render={(props) => <Profile {...props} user={user} alerts={alerts} setAlerts={setAlerts}/>}/>\n        <Route path='/app/sign-up' exact render={(props) => <SignUp {...props} alerts={alerts} setAlerts={setAlerts}/>}/>\n        <Route path='/app/login' exact render={(props) => <Login {...props} setUser={setUser} alerts={alerts} setAlerts={setAlerts}/>}/>\n        <Route path='/app/logout' exact render={(props) => <Logout {...props} setUser={setUser} />} />\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}